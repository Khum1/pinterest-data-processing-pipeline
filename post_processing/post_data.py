from .geo_process import GeoPost
from .pin_process import PinPost
from .user_process import UserPost

batch_headers = {'Content-Type': 'application/vnd.kafka.json.v2+json'}
geo_batch = GeoPost(batch_headers)
pin_batch = PinPost(batch_headers)
user_batch = UserPost(batch_headers)

streaming_headers = {'Content-Type': 'application/json'}
pin_streaming = PinPost(streaming_headers)
geo_streaming = GeoPost(streaming_headers)
user_streaming = UserPost(streaming_headers)

class PostData():
    '''
    A class to post data to batch and streaming AWS services

    Attributes
    ----------
    None

    Methods
    -------
    post_batch_data(pin_result, geo_result, user_result):
        sends batch data requests to the API to be sent to their topics
    
    post_streaming_data(pin_result, geo_result, user_result):
            sends streaming data requests to the API to be sent to their streams

    '''
    def post_batch_data(self, pin_result, geo_result, user_result):
        '''
        Sends batch data requests to the API to be sent to their topics

        Parameters
        ----------
        pin_result : str
            pin post data generated by the user posting emulation
        geo_result : str
           geolocation post data generated by the user posting emulation
        user_result : str
            user data generated by the user posting emulation
        
        Returns
        -------
        None
        '''
        geo_batch.send_batch_request(geo_result)
        pin_batch.send_batch_request(pin_result)
        user_batch.send_batch_request(user_result)

    def post_streaming_data(self, pin_result, geo_result, user_result):
        '''
        Sends streaming data requests to the API to be sent to their streams

        Parameters
        ----------
        pin_result : str
            pin post data generated by the user posting emulation
        geo_result : str
           geolocation post data generated by the user posting emulation
        user_result : str
            user data generated by the user posting emulation
        
        Returns
        -------
        None
        '''
        pin_streaming.send_stream_request(pin_result)
        geo_streaming.send_stream_request(geo_result)
        user_streaming.send_stream_request(user_result)




